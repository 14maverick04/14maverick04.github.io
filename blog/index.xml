<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on</title><link>https://14maverick04.github.io/blog/</link><description>Recent content in Blogs on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 04 Nov 2023 22:04:53 +0530</lastBuildDate><atom:link href="https://14maverick04.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Runner-GoInAction</title><link>https://14maverick04.github.io/blog/runner-goinaction/</link><pubDate>Sat, 04 Nov 2023 22:04:53 +0530</pubDate><guid>https://14maverick04.github.io/blog/runner-goinaction/</guid><description>Runner It shows how channels can be used to monitor the amount of time for a program is running and terminate the program if it runs too long.
Things worth to remember The interrupt channel is initialized as a buffered channel with buffer of 1. This gurantees at least one os.Signal value received from the runtime. The runtime sends this value event in nonblocking way. If a goroutine isn&amp;rsquo;t ready to receive this value, the value is thrown away.</description></item></channel></rss>